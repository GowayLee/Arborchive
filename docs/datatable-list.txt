1. compilations
2. compilation_args
3. compilation_build_mode
4. compilation_compiling_files
5. compilation_time
6. diagnostic_for
7. compilation_finished
8. externalData
9. sourceLocationPrefix
10. external_packages
11. header_to_external_package
12. svnentries
13. svnaffectedfiles
14. svnentrymsg
15. svnchurn
16. extractor_version
17. @location
18. locations_default
19. locations_stmt
20. locations_expr
21. @sourceline
22. numlines
23. diagnostics
24. files
25. folders
26. @container
27. containerparent
28. fileannotations
29. inmacroexpansion
30. affectedbymacroexpansion
31. macroinvocations
32. macroparent
33. macrolocationbind
34. macro_argument_unexpanded
35. macro_argument_expanded
36. functions
37. function_entry_point
38. function_return_type
39. coroutine
40. coroutine_placeholder_variable
41. coroutine_new
42. coroutine_delete
43. purefunctions
44. function_deleted
45. function_defaulted
46. function_prototyped
47. deduction_guide_for_class
48. member_function_this_type
49. fun_decls
50. fun_def
51. fun_specialized
52. fun_implicit
53. fun_decl_specifiers
54. fun_decl_throws
55. fun_decl_empty_throws
56. fun_decl_noexcept
57. fun_decl_empty_noexcept
58. fun_decl_typedef_type
59. fun_requires
60. param_decl_bind
61. var_decls
62. var_def
63. var_specialized
64. var_decl_specifiers
65. is_structured_binding
66. var_requires
67. type_decls
68. type_def
69. type_decl_top
70. type_requires
71. namespace_decls
72. usings
73. using_container
74. static_asserts
75. params
76. overrides
77. membervariables
78. globalvariables
79. localvariables
80. autoderivation
81. orphaned_variables
82. enumconstants
83. @variable
84. @localscopevariable
85. builtintypes
86. derivedtypes
87. pointerishsize
88. arraysizes
89. typedefbase
90. decltypes
91. usertypes
92. usertypesize
93. usertype_final
94. usertype_uuid
95. nontype_template_parameters
96. type_template_type_constraint
97. mangled_name
98. is_pod_class
99. is_standard_layout_class
100. is_complete
101. is_class_template
102. class_instantiation
103. class_template_argument
104. class_template_argument_value
105. @user_or_decltype
106. is_proxy_class_for
107. type_mentions
108. is_function_template
109. function_instantiation
110. function_template_argument
111. function_template_argument_value
112. is_variable_template
113. variable_instantiation
114. variable_template_argument
115. variable_template_argument_value
116. template_template_instantiation
117. template_template_argument
118. template_template_argument_value
119. @concept
120. concept_templates
121. concept_instantiation
122. is_type_constraint
123. concept_template_argument
124. concept_template_argument_value
125. routinetypes
126. routinetypeargs
127. ptrtomembers
128. specifiers
129. typespecifiers
130. funspecifiers
131. varspecifiers
132. explicit_specifier_exprs
133. attributes
134. attribute_args
135. attribute_arg_value
136. attribute_arg_type
137. attribute_arg_constant
138. attribute_arg_expr
139. attribute_arg_name
140. typeattributes
141. funcattributes
142. varattributes
143. stmtattributes
144. @type
145. unspecifiedtype
146. member
147. @enclosingfunction_child
148. enclosingfunction
149. derivations
150. derspecifiers
151. direct_base_offsets
152. virtual_base_offsets
153. frienddecls
154. @declaredtype
155. @declaration
156. @member
157. @locatable
158. @namedscope
159. @element
160. @exprparent
161. comments
162. commentbinding
163. exprconv
164. compgenerated
165. synthetic_destructor_call
166. namespaces
167. namespace_inline
168. namespacembrs
169. @namespacembr
170. exprparents
171. expr_isload
172. @cast
173. conversionkinds
174. @conversion
175. iscall
176. numtemplatearguments
177. specialnamequalifyingelements
178. @namequalifiableelement
179. @namequalifyingelement
180. namequalifiers
181. varbind
182. funbind
183. @any_new_expr
184. @new_or_delete_expr
185. @prefix_crement_expr
186. @postfix_crement_expr
187. @increment_expr
188. @decrement_expr
189. @crement_expr
190. @un_arith_op_expr
191. @un_bitwise_op_expr
192. @un_log_op_expr
193. @un_op_expr
194. @bin_log_op_expr
195. @cmp_op_expr
196. @eq_op_expr
197. @rel_op_expr
198. @bin_bitwise_op_expr
199. @p_arith_op_expr
200. @bin_arith_op_expr
201. @bin_op_expr
202. @op_expr
203. @assign_arith_expr
204. @assign_bitwise_expr
205. @assign_pointer_expr
206. @assign_op_expr
207. @assign_expr
208. expr_allocator
209. expr_deallocator
210. expr_cond_two_operand
211. expr_cond_guard
212. expr_cond_true
213. expr_cond_false
214. values
215. valuetext
216. valuebind
217. fieldoffsets
218. bitfield
219. initialisers
220. braced_initialisers
221. expr_ancestor
222. exprs
223. expr_reuse
224. expr_types
225. @var_args_expr
226. @builtin_op
227. compound_requirement_is_noexcept
228. new_allocated_type
229. new_array_allocated_type
230. aggregate_field_init
231. aggregate_array_init
232. @ctorinit
233. @dtordestruct
234. condition_decl_bind
235. typeid_bind
236. uuidof_bind
237. @sizeof_or_alignof
238. sizeof_bind
239. code_block
240. lambdas
241. lambda_capture
242. @funbindexpr
243. @varbindexpr
244. @addressable
245. @accessible
246. @access
247. fold
248. stmts
249. type_vla
250. variable_vla
251. if_initialization
252. if_then
253. if_else
254. constexpr_if_initialization
255. constexpr_if_then
256. constexpr_if_else
257. @stmt_consteval_or_not_consteval_if
258. consteval_if_then
259. consteval_if_else
260. while_body
261. do_body
262. switch_initialization
263. switch_case
264. switch_body
265. @stmt_for_or_range_based_for
266. for_initialization
267. for_condition
268. for_update
269. for_body
270. @stmtparent
271. stmtparents
272. ishandler
273. @cfgnode
274. stmt_decl_bind
275. stmt_decl_entry_bind
276. @parameterized_element
277. blockscope
278. @jump
279. @jumporlabel
280. jumpinfo
281. preprocdirects
282. @ppd_include
283. @ppd_branch
284. preprocpair
285. preproctrue
286. preprocfalse
287. preproctext
288. includes
289. link_targets
290. link_parent
291. xmlEncoding
292. xmlDTDs
293. xmlElements
294. xmlAttrs
295. xmlNs
296. xmlHasNs
297. xmlComments
298. xmlChars
299. @xmlparent
300. @xmlnamespaceable
301. xmllocations
302. @xmllocatable
