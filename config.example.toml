[general]
source_path = "tests/slight-case.cc"          # 需要扫描的源码路径
output_path = "tests/ast.db"        # 输出数据库路径

[compilation]
# 编译设置
# 注意：这些设置将被转换为适合FixedCompilationDatabase的命令行参数

include_paths = [             # include path，会被转换为 -I 选项
    # "/usr/local/include",
    # "third_party/boost_1.83",
    # "src/core/include",
]

defines = [         # 预定义宏，会被转换为 -D 选项
    # "DEBUG_MODE=1",   # 带值的宏
    # "USE_FAST_ALGO",  # 无值宏
    # "MAX_ITEMS=1000", # 数值宏
]

cxx_standard = "c++20" # C++标准版本，会被转换为 -std= 选项

# 编译器标志，直接传递给编译器
flags = [
    "-fexceptions",
    "-fcoroutines",
    "-Wno-deprecated",
    "-O0"
    # "-Wall",           # 启用所有警告
    # "-Werror",         # 将警告视为错误
    # "-O2",             # 优化级别
]

[database]
# 数据库连接参数

path = "tests/ast.db"
batch_size = 10         # 批量写入记录数
cache_size_mb = 64       # SQLite缓存大小（MB）
journal_mode = "WAL"     # 日志模式
synchronous = "NORMAL"   # 同步模式

[logging]
# 日志设置

level = "DEBUG"              # 日志级别（DEBUG/INFO/WARN/ERROR）
file = ""                    # 日志文件路径(为空则不输出至文件)
is_to_console = true         # 是否输出到控制台
batch_size = 5               # 日志批量写入记录数
enable_perf_logging = false  # 是否记录性能日志
